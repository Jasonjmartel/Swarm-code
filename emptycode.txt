package uk.ac.reading.sis05kol.mooc;

//Other parts of the android libraries that we use
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.view.MotionEvent;

public class TheGame extends GameThread{

    //Will store the image of a ball
    private Bitmap mPlayer;


    //The X and Y position of the ball on the screen (middle of ball)
    private float mPlayerX = 0;
    private float mPlayerY = 0;

       //The speed (pixel/second) of the ball in direction X and Y
    private float mPlayerSpeedX = 0;
    private float mPlayerSpeedY = 0;

    //store last touched location

    private float mDestX = 0;
    private float mDestY = 0;

    //limiters on speed

    private float mPlayerSpeed = 0;
    private float mMaxPlayerSpeed = 0;


    //This is run before anything else, so we can prepare things here
    public TheGame(GameView gameView) {
        //House keeping
        super(gameView);

        //Prepare the image so we can draw it on the screen (using a canvas)
        mPlayer = BitmapFactory.decodeResource
                (gameView.getContext().getResources(),
                        R.drawable.smiley_ball);
    }

    //This is run before a new game (also after an old game)
    @Override
    public void setupBeginning() {

        //Initialise speed and location of player
        mPlayerSpeedX = 0;
        mPlayerSpeedY = 0;

        mPlayerX = mCanvasWidth / 2;
        mPlayerY = mCanvasHeight / 2;

        mMaxPlayerSpeed = (float)Math.sqrt((mCanvasHeight*mCanvasHeight)+(mCanvasWidth*mCanvasWidth))/8;
    }

    @Override
    protected void doDraw(Canvas canvas) {
        //Make the canvas
        if(canvas == null) return;

        super.doDraw(canvas);

        //draw the player in the middle of the canvas
        canvas.drawBitmap(mPlayer, mPlayerX - mPlayer.getWidth() / 2, mPlayerY - mPlayer.getHeight() / 2, null);
    }

    //This is run whenever the phone is touched by the user
    @Override
    protected void actionOnTouch(float x, float y) {
        // Set where you last touched as the destination
        mDestX = x;
        mDestY = y;
    }

    //This is run whenever the phone moves around its axises
    @Override
    protected void actionWhenPhoneMoved(float xDirection, float yDirection, float zDirection) {
    }

    //This is run just before the game "scenario" is printed on the screen
    @Override
    protected void updateGame(float secondsElapsed) {

        //accelerate towards the point you pressed
        if (mPlayerX>mDestX){
            mPlayerSpeedX=mPlayerSpeedX-5;
        }else{
            mPlayerSpeedX=mPlayerSpeedX+5;
        }
        if (mPlayerY>mDestY){
            mPlayerSpeedY=mPlayerSpeedY-5;
        }else{
            mPlayerSpeedY=mPlayerSpeedY+5;
        }
        //Need to add something to stop wobling/make it slow down when nearby

        //max player speed here
        mPlayerSpeed = (float)Math.sqrt(((mPlayerSpeedX*mPlayerSpeedX)+(mPlayerSpeedY*mPlayerSpeedY)));
        if (mPlayerSpeed>mMaxPlayerSpeed){
            mPlayerSpeedX = mPlayerSpeedX*(mMaxPlayerSpeed/mPlayerSpeed);
            mPlayerSpeedY = mPlayerSpeedY*(mMaxPlayerSpeed/mPlayerSpeed);
        }


        //Move the ball's X and Y using the speed (pixel/sec)
        mPlayerX = mPlayerX + secondsElapsed * mPlayerSpeedX;
        mPlayerY = mPlayerY + secondsElapsed * mPlayerSpeedY;
    }
}
